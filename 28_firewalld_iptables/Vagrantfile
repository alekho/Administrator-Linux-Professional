# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/6",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                ]
  },
  :inetRouter2 => {
        :box_name => "centos/7",
        :net => [
                  {ip: '192.168.255.3', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "router-net"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "directors-net"},
                   {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "hardware-net"},
                   {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "wifi-net"},
                   {ip: '192.168.200.2', adapter: 6, netmask: "255.255.255.252", virtualbox__intnet: "office1-net"},
                   {ip: '192.168.100.2', adapter: 7, netmask: "255.255.255.252", virtualbox__intnet: "office2-net"},
                ]
  },
  
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "directors-net"},
                ]
  },
  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "256"]
          vb.customize ["modifyvm", :id, "--cpus", "1"]
          vb.name = boxname.to_s
        end

        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            ip route add 192.168.0.0/16 via 192.168.255.2
            iptables -N KNOCKING
            iptables -N SSH_ONE
            iptables -N SSH_TWO
            iptables -A INPUT -j KNOCKING
            iptables -A KNOCKING -p icmp --icmp-type any -j ACCEPT
            iptables -A KNOCKING -m state --state ESTABLISHED,RELATED -j ACCEPT
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp --dport 22 -m recent --rcheck --seconds 30 --name SSH0 -j ACCEPT
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp -m recent --name SSH0 --remove -j DROP
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp --dport 9494 -m recent --rcheck --name SSH1 -j SSH_ONE
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp -m recent --name SSH1 --remove -j DROP
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp --dport 8282 -m recent --rcheck --name SSH2 -j SSH_TWO
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp -m recent --name SSH2 --remove -j DROP
            iptables -A KNOCKING -m state --state NEW -m tcp -p tcp --dport 7373 -m recent --name SSH2 --set -j DROP
            iptables -A SSH_ONE -m recent --name SSH1 --set -j DROP
            iptables -A SSH_TWO -m recent --name SSH0 --set -j DROP
            iptables -A KNOCKING -j DROP
            sed -i '66s/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
            service sshd restart
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            ip route delete default
            ip route add default via 192.168.255.1
            ip route add 192.168.1.0/24 via 192.168.100.1
            ip route add 192.168.2.0/24 via 192.168.200.1
            cp /vagrant/knock.sh /root
            chmod +x /root/knock.sh
            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            ip route delete default
            ip route add default via 192.168.0.1
            yum install -y epel-release
            yum install -y nginx
            systemctl enable nginx
            systemctl start nginx
            yum install -y nmap
            SHELL
        when "inetRouter2"
            box.vm.network 'forwarded_port', guest: 8080, host: 8080, host_ip: '127.0.0.1'
            box.vm.provision "shell", run: "always", inline: <<-SHELL
              sysctl net.ipv4.conf.all.forwarding=1
              iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
              ip route add 192.168.0.0/16 via 192.168.255.2
              ip route delete default
              ip route add default via 192.168.255.1
              iptables -t nat -A PREROUTING  -p tcp --dport 8080 -j DNAT --to 192.168.0.2:80
              iptables -t nat -A POSTROUTING  -p tcp --dst 192.168.0.2 --dport 80 -j SNAT --to-source 192.168.255.3
            SHELL
        end

      end

  end
end

